#!/bin/bash
# //====================================================
# //	System Request:Debian 10/Ubuntu 18.04+/20+
# //	Author:	DevilsTunnel
# //	Dscription: Xray Menu Management
# //	email: csordervpn@gmail.com
# //  telegram: https://t.me/Rizyul04
# //====================================================
# // font color configuration | Devils Tunnel AUTOSCRIPT
###########- COLOR CODE -##############
colornow=$(cat /etc/dvs/theme/color.conf)
NC="\e[0m"
RED="\033[0;31m"
grenbo="\e[92;1m"
GREEN="\e[92;1m"
WC='\033[0m'
COLOR1="$(cat /etc/dvs/theme/$colornow | grep -w "TEXT" | cut -d: -f2|sed 's/ //g')"
COLBG1="$(cat /etc/dvs/theme/$colornow | grep -w "BG" | cut -d: -f2|sed 's/ //g')"
WH='\033[1;37m'
###########- END COLOR CODE -##########

ISP=$(cat /etc/xray/isp)
domain=$(cat /etc/xray/domain)
WKT=$(curl -s ipinfo.io/timezone)
IPVPS=$(curl -s ipv4.icanhazip.com)
tram=$(free -m | awk 'NR==2 {print $2}')
swap=$(free -m | awk 'NR==4 {print $2}')
freq=$(awk -F: ' /cpu MHz/ {freq=$2} END {print freq}' /proc/cpuinfo)
cores=$(awk -F: '/model name/ {core++} END {print core}' /proc/cpuinfo)
cname=$(awk -F: '/model name/ {name=$2} END {print name}' /proc/cpuinfo)
Exp=$(curl -sS https://raw.githubusercontent.com/DevilsTunnels/permission/main/izin | grep $IPVPS | awk '{print $3}')
Versi=$(cat /usr/sbin/mtsc.list | grep "^versi" | cut -d " " -f 2 )
Name=$(curl -sS https://sc-xray.yha.my.id/ip | grep $IPVPS | awk '{print $2}')
Open_SSH=$(systemctl status ssh | grep active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g')
Dropbear=$(/etc/init.d/dropbear status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
Dropbear_Websocket=$(/etc/init.d/dropbear status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
SSH_Websocket=$(systemctl status ws | grep active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g')
OpenVPN=$(systemctl status openvpn | grep active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g')
Nginx_Webserver=$(systemctl status nginx | grep active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g')
Haproxy=$(systemctl status haproxy | grep active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g')
DNS_Server=$(systemctl status server | grep active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g')
DNS_Client=$(systemctl status client | grep active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g')
OpenVPN_Websocket=$(systemctl status ws | grep active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g')
XRAY_Vmess_TLS=$(systemctl status haproxy | grep active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g')
XRAY_Vmess_gRPC=$(systemctl status haproxy | grep active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g')
XRAY_Vmess_None_TLS=$(systemctl status haproxy | grep active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g')
XRAY_Vless_TLS=$(systemctl status haproxy | grep active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g')
XRAY_Vless_gRPC=$(systemctl status haproxy | grep active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g')
XRAY_Vless_None_TLS=$(systemctl status haproxy | grep active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g')
Trojan_gRPC=$(systemctl status haproxy | grep active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g')
Trojan_WS=$(systemctl status haproxy | grep active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g')
Shadowsocks_WS=$(systemctl status haproxy | grep active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g')
Shadowsocks_gRPC=$(systemctl status haproxy | grep active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g')
Iptables=$(systemctl status netfilter-persistent | grep active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g')
Squid=$(systemctl status squid | grep active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g')
BadVPN=$(systemctl status udp-mini-3 | grep active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g')
RClocal=$(systemctl status rc-local | grep active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g')
Autorebot=$(systemctl status rc-local | grep active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g')
udpcustom=$(systemctl status udp-custom | grep active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g')
xraycore=$(systemctl status xray | grep active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g')
if [[ $Open_SSH == "running" ]]; then
    status_1="${grenbo}Online${NC}"
else
    status_1="${RED}Offline${NC}"
fi

if [[ $Dropbear == "running" ]]; then
    status_2="${grenbo}Online${NC}"
else
    status_2="${RED}Offline${NC}"
fi

if [[ $Dropbear_Websocket == "running" ]]; then
    status_3="${grenbo}Online${NC}"
else
    status_3="${RED}Offline${NC}"
fi

if [[ $SSH_Websocket == "running" ]]; then
    status_4="${grenbo}Online${NC}"
else
    status_4="${RED}Offline${NC}"
fi

if [[ $OpenVPN == "exited" ]]; then
    status_5="${grenbo}Online${NC}"
else
    status_5="${RED}Offline${NC}"
fi

if [[ $Nginx_Webserver == "running" ]]; then
    status_6="${grenbo}Online${NC}"
else
    status_6="${RED}Offline${NC}"
fi

if [[ $Haproxy == "running" ]]; then
    status_7="${grenbo}Online${NC}"
else
    status_7="${RED}Offline${NC}"
fi

if [[ $DNS_Server == "running" ]]; then
    status_8="${grenbo}Online${NC}"
else
    status_8="${RED}Offline${NC}"
fi

if [[ $DNS_Client == "running" ]]; then
    status_9="${grenbo}Online${NC}"
else
    status_9="${RED}Offline${NC}"
fi

if [[ $OpenVPN_Websocket == "running" ]]; then
    status_10="${grenbo}Online${NC}"
else
    status_10="${RED}Offline${NC}"
fi

if [[ $XRAY_Vmess_TLS == "running" ]]; then
    status_11="${grenbo}Online${NC}"
else
    status_11="${RED}Offline${NC}"
fi

if [[ $XRAY_Vmess_gRPC == "running" ]]; then
    status_12="${grenbo}Online${NC}"
else
    status_12="${RED}Offline${NC}"
fi

if [[ $XRAY_Vmess_None_TLS == "running" ]]; then
    status_13="${grenbo}Online${NC}"
else
    status_13="${RED}Offline${NC}"
fi

if [[ $XRAY_Vless_TLS == "running" ]]; then
    status_14="${grenbo}Online${NC}"
else
    status_14="${RED}Offline${NC}"
fi

if [[ $XRAY_Vless_gRPC == "running" ]]; then
    status_15="${grenbo}Online${NC}"
else
    status_15="${RED}Offline${NC}"
fi

if [[ $XRAY_Vless_None_TLS == "running" ]]; then
    status_16="${grenbo}Online${NC}"
else
    status_16="${RED}Offline${NC}"
fi

if [[ $Trojan_gRPC == "running" ]]; then
    status_17="${grenbo}Online${NC}"
else
    status_17="${RED}Offline${NC}"
fi

if [[ $Trojan_WS == "running" ]]; then
    status_18="${grenbo}Online${NC}"
else
    status_18="${RED}Offline${NC}"
fi

if [[ $Shadowsocks_WS == "running" ]]; then
    status_19="${grenbo}Online${NC}"
else
    status_19="${RED}Offline${NC}"
fi

if [[ $Shadowsocks_gRPC == "running" ]]; then
    status_20="${grenbo}Online${NC}"
else
    status_20="${RED}Offline${NC}"
fi

if [[ $Iptables == "exited" ]]; then
    status_21="${grenbo}Online${NC}"
else
    status_21="${RED}Offline${NC}"
fi

if [[ $Squid == "running" ]]; then
    status_22="${grenbo}Online${NC}"
else
    status_22="${RED}Offline${NC}"
fi

if [[ $BadVPN == "running" ]]; then
    status_23="${grenbo}Online${NC}"
else
    status_23="${RED}Offline${NC}"
fi

if [[ $RClocal == "exited" ]]; then
    status_24="${grenbo}Online${NC}"
else
    status_24="${RED}Offline${NC}"
fi

if [[ $Autorebot == "exited" ]]; then
    status_25="${grenbo}Online${NC}"
else
    status_25="${RED}Offline${NC}"
fi

if [[ $udpcustom == "running" ]]; then
    status_26="${grenbo}Online${NC}"
else
    status_26="${RED}Offline${NC}"
fi

if [[ $xraycore == "running" ]]; then
    corexx="${grenbo}Online${NC}"
else
    corexx="${RED}Offline${NC}"
fi

echo -e "$COLOR1═════════════════════════════════════${NC}"
echo -e "$COLBG1      ⇱ Subscription Information ⇲   ${NC}"
echo -e "$COLOR1═════════════════════════════════════${NC}"
echo -e "${COLOR1}Operating System${NC}    ${WH}: $(cat /etc/os-release | grep -w PRETTY_NAME | head -n1 | sed 's/=//g' | sed 's/"//g' | sed 's/PRETTY_NAME//g')${NC}"
echo -e "${COLOR1}Total Amount Of RAM${NC} ${WH}: $tram MB${NC}"
echo -e "${COLOR1}Ip Server${NC}           ${WH}: $IPVPS${NC}"
echo -e "${COLOR1}Domain Server${NC}       ${WH}: $(cat /etc/xray/domain)${NC}"
echo -e "${COLOR1}Exp Script${NC}          ${WH}: $Exp${NC}"
echo -e "${COLOR1}Version Script${NC}      ${WH}: $Versi ${NC}"
echo -e "$COLOR1═════════════════════════════════════${NC}"
echo -e "$COLBG1      ⇱ Service Information ⇲        ${NC}"
echo -e "$COLOR1═════════════════════════════════════${NC}"
echo -e "${WH}Service OpenSSH$NC             ${COLOR1}: $status_1 ${NC}"
echo -e "${WH}Service Dropbear$NC            ${COLOR1}: $status_2 ${NC}"
echo -e "${WH}Service Dropbear Websocket$NC  ${COLOR1}: $status_3 ${NC}"
echo -e "${WH}Service SSH Websocket$NC       ${COLOR1}: $status_4 ${NC}"
echo -e "${WH}Service OpenVPN$NC             ${COLOR1}: $status_5 ${NC}"
echo -e "${WH}Service Nginx Webserver$NC     ${COLOR1}: $status_6 ${NC}"
echo -e "${WH}Service Haproxy$NC             ${COLOR1}: $status_7 ${NC}"
echo -e "${WH}Service DNS Server$NC          ${COLOR1}: $status_8 ${NC}"
echo -e "${WH}Service DNS Client$NC          ${COLOR1}: $status_9 ${NC}"
echo -e "${WH}Service OpenVPN Websocket$NC   ${COLOR1}: $status_10 ${NC}"
echo -e "${WH}Service Core Xray$NC           ${COLOR1}: $corexx ${NC}"
echo -e "${WH}Service Xray Vmess TLS$NC      ${COLOR1}: $status_11 ${NC}"
echo -e "${WH}Service Xray Vmess gRPC$NC     ${COLOR1}: $status_12 ${NC}"
echo -e "${WH}Service Xray Vmess None TLS$NC ${COLOR1}: $status_13 ${NC}"
echo -e "${WH}Service Xray Vless TLS$NC      ${COLOR1}: $status_14 ${NC}"
echo -e "${WH}Service Xray Vless gRPC$NC     ${COLOR1}: $status_15 ${NC}"
echo -e "${WH}Service Xray Vless None TLS$NC ${COLOR1}: $status_16 ${NC}"
echo -e "${WH}Service Trojan gRPC$NC         ${COLOR1}: $status_17 ${NC}"
echo -e "${WH}Service Trojan WS$NC           ${COLOR1}: $status_18 ${NC}"
echo -e "${WH}Service Shadowsocks WS$NC      ${COLOR1}: $status_19 ${NC}"
echo -e "${WH}Service Shadowsocks gRPC$NC    ${COLOR1}: $status_20 ${NC}"
echo -e "${WH}Service netfilter$NC           ${COLOR1}: $status_21 ${NC}"
echo -e "${WH}Service Squid Proxy$NC         ${COLOR1}: $status_22 ${NC}"
echo -e "${WH}Service BadVPN$NC              ${COLOR1}: $status_23 ${NC}"
echo -e "${WH}Service RClocal$NC             ${COLOR1}: $status_24 ${NC}"
echo -e "${WH}Service Autoreboot$NC          ${COLOR1}: $status_25 ${NC}"
echo -e "${WH}Service UDP Custom$NC          ${COLOR1}: $status_26 ${NC}"
echo -e "$COLOR1═════════════════════════════════════${NC}"
echo ""
read -n 1 -s -r -p "Press any key to back on menu"
menu